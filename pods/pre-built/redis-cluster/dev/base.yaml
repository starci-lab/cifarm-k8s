apiVersion: v1
kind: Pod
metadata:
  name: redis-cluster
  labels:
    app: cifarm
spec:
  initContainers:
    # master
    - name: redis-master
      image: bitnami/redis:latest
      env:
        - name: REDIS_REPLICATION_MODE
          value: "master"

        # REDIS_ALLOW_EMPTY_PASSWORD
        - name: ALLOW_EMPTY_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: local-configmap
              key: REDIS_ALLOW_EMPTY_PASSWORD
      ports:
        # we cannot pass env variables to containerPort, due to limitations in k8s
        - containerPort: 6379
          name: rm # redis-master
      volumeMounts:
      - name: rmv # redis-master-volume
        mountPath: /var/lib/redis-master-volume
  
  containers:
    # slave 1
    - name: redis-slave-1
      image: bitnami/redis:latest
      env:
        # REDIS_REPLICATION_MODE
        - name: REDIS_REPLICATION_MODE
          value: "slave"
        
        # REDIS_MASTER_HOST
        - name: REDIS_MASTER_HOST
          value: "127.0.0.1"

        # REDIS_MASTER_PORT_NUMBER
        - name: REDIS_MASTER_PORT_NUMBER
          value: "6379"

        # REDIS_ALLOW_EMPTY_PASSWORD
        - name: ALLOW_EMPTY_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: local-configmap
              key: REDIS_ALLOW_EMPTY_PASSWORD

        # REDIS_PORT_NUMBER
        - name: REDIS_PORT_NUMBER
          value: "6380"
      ports:
        # we cannot pass env variables to containerPort, due to limitations in k8s
        - containerPort: 6380
          name: rs1 # redis-slave-1
  volumes:
    - name: rmv # redis-master-volume
      persistentVolumeClaim:
        claimName: rmc # redis-master-claim

# kubectl create -f ./pods//pre-built/redis-cluster/dev/base.yaml
# kubectl get pods
# kubectl delete pod cifarm-server-postgres-cluster
# kubectl describe pod cifarm-server-postgres-cluster -n default