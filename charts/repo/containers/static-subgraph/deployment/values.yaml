# ClusterIP configuration
clusterIp:
  metadata:
    name: static-subgraph-cluster-ip
  selector:
    name: static-subgraph-selector

# Secret configuration
secret:
  metadata:
    name: static-subgraph-secret
  env:
    jwt:
      secret: "C3ZofmtZ+hXQF2d~&bBu9x'UtkUyz?)MwXiXy_eGFlyO|:v!JW$?iZ&U6:kPQg("
      accessTokenExpiration: "5m"
      refreshTokenExpiration: "7d"
    gameplayPostgres:
      dbName: "postgres"
      host: "postgres"
      port: 5432
      user: "postgres"
      pass: "postgres"
    gameplayTestPostgres:
      dbName: "postgres"
      host: "postgres"
      port: 5432
      user: "postgres"
      pass: "postgres"
    redis:
      ttl: 86400000
      cache:
        host: "redis"
        port: 6379
      adapter:
        host: "redis"
        port: 6379
      job:
        host: "redis"
        port: 6379
    kafka:
      producers:
        producer1:
          host: "kafka"
          port: 9092
        producer2:
          host: "kafka"
          port: 9092
        producer3:
          host: "kafka"
          port: 9092
      consumers:
        consumer1:
          host: "kafka"
          port: 9092
    containers:
      subgraphStatic:
        url: "http://localhost:3007/graphql"
        port: 3007
      restApiGateway:
        host: "localhost"
        port: 3001
      websocketApiGateway:
        host: "localhost"
        port: 3002
      graphqlApiGateway:
        host: "localhost"
        port: 3003
      gameplayService:
        host: "localhost"
        port: 3014

# Deployment configuration
deployment:
  metadata:
    name: static-subgraph
  args:
    image:
      repository: cifarm/static-subgraph
      tag: latest
    dockerfile: ./apps/static-subgraph/Dockerfile
    context: git://github.com/starci-lab/cifarm-containers
  replicaCount: 2
  containerPort: 
    port: 3007
    targetPort: 3007
  resources:
    requests:
      cpu: "10m"
      memory: "20Mi"
    limits:
      cpu: "100m"
      memory: "200Mi"

# Service configuration
scaledObject:
  metadata:
    name: static-subgraph-scaled-object
  minReplicaCount: 1
  maxReplicaCount: 3
  cooldownPeriod: 30                   
  pollingInterval: 5     
  trigger:
    serverAddress:
      host: 
        name: prometheus-kube-prometheus-prometheus
        namespace: monitoring
      port: 9090
    metricName: static-subgraph-scaled-object_keda
    query: sum(rate(container_cpu_usage_seconds_total{namespace="monitoring", pod=~"static-subgraph-.*"}[1m]))"
    threshold: "0.3"