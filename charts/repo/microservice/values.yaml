# Image configuration
image:
  repository: "hello-world"
  tag: "latest"

# Service-related configuration
service: 
  type: "ClusterIP"
  port: 3000
  targetPort: 3000

nodeSelector: {}
env:
  JWT_SECRET: "C3ZofmtZ+hXQF2d~&bBu9x'UtkUyz?)MwXiXy_eGFlyO|:v!JW$?iZ&U6:kPQg("
  JWT_ACCESS_TOKEN_EXPIRATION: "5m"
  JWT_REFRESH_TOKEN_EXPIRATION: "7d"

  GAMEPLAY_POSTGRES_DBNAME: "gameplay"
  GAMEPLAY_POSTGRES_HOST: "gameplay-postgresql-postgresql-ha-pgpool.databases.svc.cluster.local"
  GAMEPLAY_POSTGRES_PASS: "UqW1R2J7UhKv6Aqf"
  GAMEPLAY_POSTGRES_PORT: 5432
  GAMEPLAY_POSTGRES_USER: "postgres"

  REDIS_TTL: "86400000"

  GRAPHQL_STATIC_SUBGRAPH_PORT: 3007

  CACHE_REDIS_HOST: "cache-redis-master.databases.svc.cluster.local"
  CACHE_REDIS_PORT: 6379

  ADAPTER_REDIS_HOST: "adapter-redis-master.databases.svc.cluster.local"
  ADAPTER_REDIS_PORT: 6379

  JOB_REDIS_HOST: "job-redis-master.databases.svc.cluster.local"
  JOB_REDIS_PORT: 6379

  REST_API_GATEWAY_HOST: "rest-api-gateway-service.containers.svc.cluster.local"
  REST_API_GATEWAY_PORT: 3001

  WEBSOCKET_API_GATEWAY_HOST: ""
  WEBSOCKET_API_GATEWAY_PORT: ""

  GRAPHQL_API_GATEWAY_HOST: ""
  GRAPHQL_API_GATEWAY_PORT: ""

  GAMEPLAY_SERVICE_HOST: ""
  GAMEPLAY_SERVICE_PORT: ""

  #headless
  HEADLESS_KAFKA_1_HOST: "kafka-controller-0.kafka-controller-headless.brokers.svc.cluster.local" 
  HEADLESS_KAFKA_1_PORT: 9092

  HEADLESS_KAFKA_2_HOST: "kafka-controller-1.kafka-controller-headless.brokers.svc.cluster.local" 
  HEADLESS_KAFKA_2_PORT: 9092

  HEADLESS_KAFKA_3_HOST: "kafka-controller-2.kafka-controller-headless.brokers.svc.cluster.local" 
  HEADLESS_KAFKA_3_PORT: 9092

  #default
  KAFKA_1_HOST: "kafka.brokers.svc.cluster.local" 
  KAFKA_1_PORT: 9092

# Replicas configuration
replicas:
  enableScaling: false
  desiredCount: 2
  minCount: 1
  maxCount: 3
  cooldownPeriod: 30
  pollingInterval: 5

# Resources configuration
resources:
  requests:
    cpu: "10m"
    memory: "20Mi"
  limits:
    cpu: "90m"
    memory: "180Mi"

# Prometheus configuration
prometheus:
  serverAddress:
    host: "prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local"
    port: 9090
  metricName: "example-metric"
  query: "sum(rate(container_cpu_usage_seconds_total{namespace=\"monitoring\", pod=~\"example-.*\"}[1m]))"
  threshold: "0.3"

# RBAC configuration
rbac:
  enabled: true
  useClusterScope: true
  roles: 
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]