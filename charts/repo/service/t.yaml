---
# Source: service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-service
  namespace: default
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
automountServiceAccountToken: false
---
# Source: service/templates/env-vars-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-service-env-vars
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
type: Opaque
stringData:
  FOO3: bar
  FOO4: bar2
---
# Source: service/templates/env-vars-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-service-env-vars
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
data:
  FOO: bar
  FOO2: bar2
---
# Source: service/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
---
# Source: service/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-service
subjects:
  - kind: ServiceAccount
    name: release-name-service
    namespace: "default"
---
# Source: service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
spec:
  type: ClusterIP
  ports:
    
    - name: app
      port: 8080
      targetPort: app
      protocol: TCP
      nodePort: null
    
    - name: health-check
      port: 8081
      targetPort: health-check
      protocol: TCP
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: service
    app.kubernetes.io/component: service
---
# Source: service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-service
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: service
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: service
        app.kubernetes.io/version: 1.0.0
        helm.sh/chart: service-1.1.0
        app.kubernetes.io/component: service
      annotations:
        checksum/env-vars-secrets: aab0d4d0e745b599155aa00ec612caaf5049b625c703185aef8819c23084724d
        checksum/env-vars-configmap: 08a9981df9e126eaf4c5960001e47c7a3356fab2ac714a53cd6bc58439530ee8
    spec:
      serviceAccountName: release-name-service
      imagePullSecrets:
        - name: docker
      automountServiceAccountToken: 
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: service
                    app.kubernetes.io/component: service
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: service
          image: docker.io/cifarm/gameplay-service:latest
          imagePullPolicy: "Always"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              value: "default"
          envFrom:
            - configMapRef:
                name: release-name-service-env-vars
            - secretRef:
                name: release-name-service-env-vars
          ports:
            
            - name: app
              containerPort: 8080
              protocol: TCP
            
            - name: health-check
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: app
            initialDelaySeconds: 180
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: health-check
            initialDelaySeconds: 
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          resources:
            limits:
              cpu: 90m
              memory: 180Mi
            requests:
              cpu: 10m
              memory: 20Mi
          volumeMounts:
      volumes:
