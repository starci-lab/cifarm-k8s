apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    meta.helm.sh/release-name: graphql-gateway
    meta.helm.sh/release-namespace: containers
  creationTimestamp: "2025-01-13T18:05:01Z"
  generation: 2
  labels:
    app.kubernetes.io/instance: graphql-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: service
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: service-1.1.0
  name: graphql-gateway-service
  namespace: containers
  resourceVersion: "83445"
  uid: 8456d006-5ede-48d4-a588-278bc5c1bb0a
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: graphql-gateway
      app.kubernetes.io/name: service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/env-vars-configmap: e048f6488244db7aa2da780d8f5f0ac2ae1478ca278fbf0dd1b2ea99d493455c
        checksum/env-vars-secrets: 1500bd757a472b1051bb3796615bc8ae426a924c8deee8fd85eec47bccf76c73
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: service
        app.kubernetes.io/instance: graphql-gateway
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: service
        app.kubernetes.io/version: 1.0.0
        helm.sh/chart: service-1.1.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: service
                  app.kubernetes.io/instance: graphql-gateway
                  app.kubernetes.io/name: service
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          value: containers
        - name: PRODUCTION_URL
          value: https://io-admin.cifarm.dev.starci.net
        envFrom:
        - configMapRef:
            name: graphql-gateway-service-env-vars
        - secretRef:
            name: graphql-gateway-service-env-vars
        image: docker.io/cifarm/graphql-gateway:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: app
          timeoutSeconds: 5
        name: service
        ports:
        - containerPort: 8080
          name: app
          protocol: TCP
        - containerPort: 8081
          name: health-check
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: health-check
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 180m
            memory: 360Mi
          requests:
            cpu: 60m
            memory: 120Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: docker-credentials
      nodeSelector:
        eks.amazonaws.com/nodegroup: primary-cifarm-dev-22
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      serviceAccount: graphql-gateway-service
      serviceAccountName: graphql-gateway-service
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-01-13T18:06:06Z"
    lastUpdateTime: "2025-01-13T18:06:06Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-01-13T18:05:01Z"
    lastUpdateTime: "2025-01-13T20:42:08Z"
    message: ReplicaSet "graphql-gateway-service-69c886ccf9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
